#springboot启动会扫描以下位置的application.properties或者application.yml文件作为spring boot的默认配置
# -file:./config/  (该项目路径下config文件夹下)
# -file:./  (该项目路径下)
# -classpath:./config/  (类路径下config文件夹下)
# -classpath:./  (类路径下)
#优先级由高到低,高优先级配置会覆盖低优先级配置
#SpringBoot会从这四个位置全部加载著配置文件,互补配置:高优先级里有的用高优先级的,没有的用低优先级的(用处:高优先级配置部分内容,低优先级配置全部内容)
server.port=8081

#配置项目访问路径
#server.context-path=/bootconfigload  (应该是过时了)
server.servlet.context-path=/bootconfigload

#通过spring.config.location来改变默认的配置文件位置(随意位置的配置文件路径),不可直接配置使用(使用java -jar命令),优先级高于以上四个
#(运维时用)项目打包好以后,使用命令行参数的形式,启动项目的时候来指定配置文件的新位置,指定的配置文件和默认加载的这些配置文件共同起作用形成互补配置
#java -jar spring-boot-config-load-0.0.1-SNAPSHOT.jar --spring.config.location=E:/application.properties
#??不知道为什么运行jar时使用了这个以后,server.servlet.context-path=/bootconfigload不起作用了,作者的是起作用的
#spring.config.location=E:/application.properties

#外部配置加载顺序
#SpringBoot也可以从以下位置加载配置:优先级从高到低,高优先级配置覆盖低优先级配置,所有的配置会形成互补配置
# Devtools global settings properties on your home directory (~/.spring-boot-devtools.properties when devtools is active).
# @TestPropertySource annotations on your tests.
# properties attribute on your tests. Available on @SpringBootTest and the test annotations for testing a particular slice of your application.

# 1.命令行参数(java -jar xxx.jar后 --可以直接使用配置文件中的属性,多个参数使用空格分开, --配置项=值)
#   java -jar spring-boot-config-load-0.0.1-SNAPSHOT.jar --spring.config.location=E:/application.properties --server.port=8087 --server.servlet.context-path=/bootconfigload (优先级比 --spring.config.location配置文件中的属性高)

# Properties from SPRING_APPLICATION_JSON (inline JSON embedded in an environment variable or system property).
# ServletConfig init parameters.
# ServletContext init parameters.
# 2.来自java:comp/env的JNDI属性
# 3.Java系统属性（System.getProperties()）
# 4.OS(操作系统)环境变量
# 5.RandomValuePropertySource配置的random.*属性

#由jar包外向jar包内进行寻找
#与jar包同级目录下的application.properties文件或者yml文件/jar里的,使用java -jar xxx.jar命令会自动加载该配置文件
# 6.jar包外部的application-{profile}.properties或application.yml(带spring.profile)配置文件,即多个application-xxx.properties及其对应的yml文件中的spring.profile文档块
# 7.jar包内部的application-{profile}.properties或application.yml(带spring.profile)配置文件,即多个application-xxx.properties及其对应的yml文件中的spring.profile文档块
# 8.jar包外部的application.properties或application.yml(不带spring.profile)配置文件,即单个application.properties及其对应的yml文件
# 9.jar包内部的application.properties或application.yml(不带spring.profile)配置文件,即单个application.properties及其对应的yml文件

# 10.@Configuration注解类上的@PropertySource
# 11.通过SpringApplication.setDefaultProperties指定的默认属性