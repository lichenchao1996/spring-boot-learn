<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <parent>
        <artifactId>spring-boot-learn</artifactId>
        <groupId>com.licc</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>

    <!--放到其父pom文件里了-->
    <!--spring-boot-starter-parent:其父类spring-boot-dependencies为版本仲裁中心,在此dependencies管理下的依赖默认不需写版本号,不在dependencies管理下的依赖需声明版本号-->
    <!--<parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.6.RELEASE</version>
        <relativePath/> &lt;!&ndash; lookup parent from repository &ndash;&gt;
    </parent>-->

    <artifactId>spring-boot-helloworld</artifactId>

    <!--Spring Boot将所有的功能场景都抽取出来,做成一个个startess(启动器),只需引入这些starter,则相关场景的所有依赖都会导入进来(用什么功能就导入什么场景的启动器)-->
    <dependencies>
        <!--spring-boot-starter:spring-boot场景启动器;spring-boot-starter-web:导入了web模块正常运行的所依赖的组件-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
    </dependencies>

    <!--放到其父pom文件中去了-->
    <!--该插件可将应用打包成一个可执行的jar包,而无需在目标服务器安装tomcat服务器等-->
    <!--<build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>-->


</project>